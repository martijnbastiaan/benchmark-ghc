name: doctest-parallel-ci
on:
  push:
    branches:
      # - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  benchmark:
    name: ${{ matrix.os }} / GHC ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-24.04"]
        rust:
          - "1.68.2"
          - "1.67.1"
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        id: setup-rust
        with:
          toolchain: ${{ matrix.rust }}
          target: "riscv32imc-unknown-none-elf"
          components: "rustfmt, clippy, rust-src, llvm-tools, llvm-tools-preview"

      - name: Install cargo-binutils
        run: |
          cargo install --locked cargo-binutils

      - name: Build hello binary
        run: |
          cargo build --release
          cargo build

      - name: Collect results
        run: |
          cargo size --release --bin benchmark-cargo 
          cargo size --bin benchmark-cargo
          release_size="$(cargo size --release --bin benchmark-cargo |& tail -n 1 | egrep -o '^[ ]+[0-9]+' | egrep -o '[0-9]+')"
          debug_size="$(cargo size --bin benchmark-cargo |& tail -n 1 | egrep -o '^[ ]+[0-9]+' | egrep -o '[0-9]+')"
          echo "{\"results\": [{\"debug\": $debug_size, \"release\": $release_size}]}" > results-${{ matrix.os }}-${{ matrix.rust }}.json

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.os }}-${{ matrix.rust }}
          path: results-${{ matrix.os }}-${{ matrix.rust }}.json

  collect-results:
    name: Collect results
    needs: benchmark
    if: ${{ !cancelled() }}
    runs-on: "ubuntu-24.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install JQ + YQ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq yq

      - name: Download artifacts
        run: |
          IFS=$'\n'

          curl \
            -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -L "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts?per_page=1024" \
            --output "artifacts.json"

          artifact_urls=$(jq -r '.artifacts.[].url' artifacts.json)
          for artifact_url in $artifact_urls; do
            echo "Downloading artifact: ${artifact_url}/zip"
            curl \
              -s \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -L "${artifact_url}/zip" \
              --output artifact.zip

              unzip artifact.zip
              rm -f artifact.zip
          done

      - name: ls
        run: |
          IFS=$'\n'

          oss="$(.github/scripts/get_matrix_values.sh os)"
          rusts="$(.github/scripts/get_matrix_values.sh rust)"

          echo "os,rust,debug,release" > results.csv
          for os in $oss; do
            for rust in $rusts; do
              filename="results-${os}-${rust}.json"
              if [ -f "${filename}" ]; then
                echo -n "${os},${rust}," >> results.csv
                jq -r '.results[0]|[.debug, .release] | @csv' "${filename}" >> results.csv
              fi
            done
          done

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: results.csv
          path: results.csv
